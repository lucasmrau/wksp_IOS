import Realm from "realm";
export declare function getObjectForPrimaryKey<T extends Realm.Object>(realm: Realm, type: string | {
    new (...args: any): T;
}, primaryKey: T[keyof T]): T | null;
export declare function getObjects<T extends Realm.Object>(realm: Realm, type: string | {
    new (...args: any): T;
}): Realm.Results<T>;
export type CollectionCallback = Parameters<typeof Realm.Results.prototype.addListener>[0];
export type AnyRealmObject = Realm.Object<any>;
export type RealmClassType<T = any> = {
    new (...args: any): T;
};
export declare function isClassModelConstructor(value: unknown): value is RealmClassType<unknown>;
//# sourceMappingURL=helpers.d.ts.map